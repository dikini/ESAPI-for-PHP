<?xml version="1.0"?>
<page title="Simpletest Eclipse Plugin" here="Eclipse">
    <long_title>Simpletest Eclipse Plugin Documentation</long_title>
    <content>
    	<section name="compat" title="Compatibility">
    	<ul>
    	<li>
        <b>Operating System.</b><br/>
        This plugin should work on any platform on which Eclipse works.  Specifically
        the plugin has been tested to work on Linux, OS X, and Windows.  If the 
        plugin does not appear to work on one of these platforms a new incompatibility
        may have emerged, but this is relatively unlikely.
        </li>
        <li>
        <b>Eclipse</b><br/>
        The plugin has been designed to work with Eclipse versions 3.0.X+ and 3.1.X+. 
        Eclipse in general requires a JVM version of 1.4.x; there are no additional requirements for the plugin.
        </li>
        <li>
        <b>PHP</b><br/>
        The plugin has been tested to work with PHP 4.3.x+ (including PHP 5.0.x.).
        </li>
        <li>
        <b>Simpletest</b><br/>
        The plugin has been designed to work with a specific version of Simpletest 
        and in fact includes the associated version of Simpletest in the plugin for compatibility. 
        A plugin with a version number of 1.0.0_0.0.4 would indicate that the plugin was compatible 
        with Simpletest version 1.0.0 and was version 0.0.4 of the plugin. 
        Some slight modifications to the Simpletest code are required to make the plugin 
        work with Simpletest; these modifications may or may not be in the released version of Simpletest.
        </li>
        </ul>
        </section>
        <section name="install" title="Installation">
        <ol>
        <li>Download and Install Eclipse (<a href="http://www.eclipse.org">www.eclipse.org</a>) â€“ if you are not sure what to download, download the Eclipse 3.1.0 SDK.</li>
        <li>Download the latest Simpletest Eclipse plug-in zip file (<a href="http://sourceforge.net/project/showfiles.php?group_id=76550&amp;package_id=159054">Simpletest Sourceforge</a>)</li>
        <li>Extract the zip file to a temporary location {this will be referred to later in this documentation as $unzip}</li>
        <li>Start Eclipse</li>
        <li>Open the Install Wizard by clicking "Help" > "Software Updates" > "Find and Install" from the menu bar.</li>
        <li>Select the second button, "Search for new features to install" and click "Next".</li>
   		<li>Click the button on the right hand side, "New Local Site".</li>
   		<li>Select the folder $unzip {the folder extracted previously}.</li>
		<li>Click the "OK" button.</li>
		<li>In the "Edit Local Site" window, Click the "OK" button</li>
		<li>Click the "Finish" button</li>
		<li>In the "Search Results" window, drill down and select "Simpletest plug-in 0.0.x"</li>
		<li>Click the "Next" button.</li>
		<li>Read the license and accept the license by clicking the "I accept the terms in the license agreement" radio button and then clicking the "Next" button</li>
		<li>In the "Installation" window you can choose to change the location -- most users should just click the "Finish" button</li>
		<li>In the "Feature Verification" window, click the "Install" button.</li>
		<li>When prompted, restart Eclipse</li>
		<li>
	        <p>After starting Eclipse for the first time after installation 
	         you will need to perform a quick configuration of the Simpletest Plug-in.  
	         To perform this configuration:
	        </p>
	        <ol type="a">
	        <li>
	       	Select "Window" > "Preferences" from the menu bar
	       	</li>
	       	<li>
	       	Select "Simpletest" from the categories on the left hand side of the popup box.
	       	</li>
	       	<li>
	       	Enter or Browse for the location of a PHP executable to use.   
	       	</li>
	       	<li>
	       	Leave the include file blank
	       	</li>
	       	<li>
	       	Enter .php as the Test File Suffix.  
	       	Alternately if you name your test PHP files with a sufficiently different suffix 
	       	(e.g sometest.tst.php) you could enter in a more differentiating suffix (e.g. .tst.php).  
	       	This helps when the plug-in is looking for tests to execute.
	       	</li>
	       	<li>
	       	Hit the "Ok" button to close the preferences window.
	       	</li>
	        </ol>
        </li>
        </ol>
        </section>
        <section name="update" title="Update Existing Installation">
        Note: this will only work if you have previously installed the plugin using the 
        Eclipse installation wizard.  If you previously copied directories for installation,
        it is recommended that you shutdown Eclipse, delete the previous version directories, and
        follow the Installation instructions above (you should not have to perform the initial configuration
        portion).
        <ol>
        <li>Select "Help" > "Software Updates" > "Manage Configuration" from the menu</li>
        <li>Drill down to find the Simpletest plugin and select it</li>
        <li>In the right hand pane click the link for "Scan for Updates"</li>
        <li>Select the feature versions that you wish to upgrade, and click "Next".</li>
		<li>Review the license agreements for the upgraded features. If the terms of all these licenses are acceptable, check "I accept the terms in the license agreements." Do not proceed to download the features if the license terms are not acceptable.</li>
		<li>Click "Install" to allow the downloading and installing to proceed.</li>
		<li>Once all the features and plug-ins have been downloaded successfully and their files installed into the product on the local computer, a new configuration that incorporates these features and plug-ins will be formulated. Click Yes when asked to exit and restart the Workbench for the changes to take effect.</li>
        </ol>
        </section>
        <section name="uninstall" title="Uninstall">
        Note: this will only work if the plugin was installed via the Feature Update method.  If installed via alternate methods, then the plugin can be uninstalled by deleting the directories which were previously added.
        <ol>
        <li>Select "Help" > "Software Updates" > "Manage Configuration"</li>
		<li>Drill down to find the Simpletest plugin</li>
		<li>Right-click on the Simpletest plugin and select the option "Disable"</li>
		<li>when prompted, restart Eclipse</li>
		<li>After Eclipse has restarted, select "Help" > "Software Updates" > "Manage Configuration" from the menu bar</li>
		<li>Select the option from the toolbar "Show Disabled Features"</li>
		<li>Drill down to find the Simpletest plugin</li>
		<li>Right-click on the Simpletest plugin and select the option "Uninstall"</li>
		<li>When prompted, restart Eclipse</li>
        </ol>
        </section>
        <section name="usage" title="Usage">
        <p>
        The following details some sample usages of the plugin.
        </p>
        <ol>
        <li>Create a new test project (a holding place for related files)
			<ol>
			<li>Select "File" > "New" > "Project.." from the menu</li>
			<li>Expand the folder "Simple" and select "Project"</li>
			<li>Click the "Next" button</li>
			<li>On the next tab enter a project name: "Test"</li>
			<li>Use the default Project Contents</li>
			<li>Click the "Finish" button</li>
			</ol>
		</li>
		<li>Create a Single Passing Test
			<ol>
			<li>In the Package Explorer View right-click on the "Test" project and select "New" > "File".</li>
			<li>For the filename enter: test1.php and click "Finish"</li>
			<li>Double-click on the test1.php entry in the Package Explorer which should open a new view to edit the file.</li>
			<li>Enter the following for the contents of the file:
<php><![CDATA[
<?php
class test1 extends UnitTestCase {
  function test_pass(){
    $x = 1;
    $y = 2;
    $total = $x + $y;
    $this->assertEqual(3,$total, "This should pass");
  }
}
?>
]]></php>
			</li>
			<li>Select "File" > "Save" from the menu.</li>
			<li>Right click on the test1.php entry and select "Run" > "Run Simpletest".</li>
			<li>The "Result View" should populate with information about the test run and the Simpletest console should fill with some information as well.</li>
			</ol>
		</li>
		<li>Single Test class multiple tests
			<ol>
			<li>In the Package Explorer View right-click on the "Test" project and select "New" > "File".</li>
			<li>For the filename enter: test2.php and click "Finish".</li>
			<li>Double-click on the test2.php entry in the Package Explorer which should open a new view to edit the file.</li>
			<li>Enter the following for the contents of the file:
<php><![CDATA[
<?php
class test2 extends UnitTestCase {          
  function test_pass(){
    $x = 1;
    $y = 2;
    $total = $x + $y;
    $this->assertEqual(3,$total, "This should pass");
  }
  function test_fail(){
    $x = 1;
    $y = 2;
    $total = $x + $y;
    $this->assertEqual(4,$total,"This should fail");
  }
}
?>
]]></php>
			</li>
			<li>Select "File" > "save" from the menu bar.</li>
			<li>Right click on the test2.php entry and select "Run" > "Run Simpletest".</li>
			<li>The Result View should populate with information about the test run and the Simpletest console should fill with some information as well</li>
			</ol>
		</li>
		<li>Group Tests (test multiple files at once)
			<ol>
			<li>In the Package Explorer View right-click on the "Test" project and select "New" > "File"</li>
			<li>For the filename enter: grouptest.php and click "Finish".</li>
			<li>Double-click on the grouptest.php entry in the Package Explorer which should open a new view to edit the file.</li>
			<li>Enter the following for the contents of the file:
<php><![CDATA[
<?php
class myGroupTest extends GroupTest {
  function myGroupTest() {
    parent::GroupTest('');
    $this->addTestFile(dirname(__FILE__).'/test1.php');
    $this->addTestFile(dirname(__FILE__).'/test2.php');
  }
}
?>
]]></php>
			</li>
			<li>Select "File" > "save" from the menu</li>
			<li>Right click on the grouptest.php entry and select "Run" > "Run Simpletest"</li>
			<li>The Result View should populate with information about the test run and the Simpletest console should fill with some information as well</li>
			</ol>
		</li>
		</ol>
		</section>
        <section name="known" title="Known Issues">
        <ul>
        <li>
        Make sure that if a constructor is used in the test case 
		that the last line of the constructor calls the parent
		constructor (e.g. parent::UnitTestCase)
		</li>
		<li>
		Do not put any assertions into the test class constructor
		</li>
		</ul>
		</section>
        <section name="todo" title="Future Features">
        <p>These are features that should eventually make it into this plugin</p>
        <ul>
        <li>
        Allow different "include" file on each runner (override the "master" include)
        </li>
        <li>
		Handle fatal errors better
		</li>
		<li>
		Make the simpletest php be included as a zip/tgz/phar for simplicity in packaging 
		the java code could/should automatically unpack the zip/tgz/phar if it does not exist 
		the first time used.
		</li>
		<li>
		Create ability to pass in -c parameter for php to specify the php.ini file.
        </li>
        </ul>
        </section>
        <section name="release" title="Release Notes">
        <ul>
        <li>
        <strong>0.0.6</strong><br/>
        Notes
        <ul>
        <li>This release contains the necessary fixes to provide compatibility with 
        Linux and Mac OS X. I received invaluable help from George McLachlan in making
        testing and providing code level recommendations for OS X compatibility.
        The code level changes have also proven to provide Linux compatibility (for the
        most part the trick was making the calls using the Java provided system calls
        and letting Java handle the differences between OSes.
        </li>
        <li>
        The documentation has been improved and the first attempt at integration
        with the Simpletest site documentation has been attempted.  The documentation 
        can now be found in the readme.html in the released zip file.  In the future 
        this same document will also be found somewhere on the simpletest.org site.
        A temporary location for this file is: <a href="http://www.simpletest.org/eclipse/readme.html">http://www.simpletest.org/eclipse/readme.html</a>        
        </li>
        <li>
        This release also allows updating via an "Update" site.  Instructions for usage
        are included in the readme.html.
        </li>
        <li>
        This release also includes a *temporary* change to the simple_test.php file (about line 353) 
        to allow for PHP 5.1.x compatibility (by request from: 
        <a href="http://www.sitepoint.com/forums/showthread.php?t=268990&amp;page=3&amp;highlight=simpletest+eclipse">Sitepoint Forum</a>)
        </li>
        </ul>
        Changes
        <ul>
        <li>
        Made changes to allow running under Linux/OSX
        </li>
        <li>
        Refactored some code that was derived from Junit code which Eclipse was having a *problem* with
  		</li>
  		<li>
  		Refactored the documentation
  		</li>
  		<li>
  		Created update site release process
  		</li>
  		<li> 
  		Change to simple_test.php for 5.1.x compatibility
  		</li>
  		</ul>
        </li>
        <li>
        <b>0.0.5</b><br/>
        Notes
        <ul>
        <li>
        This release continues the process of improving installation compatibility. 
        Tim Van Wassenhove proved invaluable in helping to hunt down and resolve the 
        installation issue he was having (he provided both patience and code level 
        troubleshooting); this release incorporates the fixes he recommended which 
        solved his installation problems. I still have not had a chance to test with 
        Linux, but this release has the best chance of any of potentially working 
        under Linux. Anyone having installation problems please feel free to contact 
        me at stevenbalthazor@gmail.com or send a note to the simpletest list -- 
        I want to make this as seamless as possible to install for the most amount of people.
        </li>
        </ul>
        Changes
        <ul>
        <li>
        Fixed some potential problems with paths (especially spaces in paths)
        </li>
        <li>
        Fixed compatibility with Xored Php Eclipse plugin Respect php.ini path Better parsing of executable Allow external simpletest repository to be used Updated the samples.zip file
        </li>
        <li>
        Respect php.ini path 
        </li>
        <li>
        Better parsing of executable
        </li>
        <li>
        Allow external simpletest repository to be used
        </li>
        <li>
        Updated the samples.zip file
        </li>
        </ul>
        </li>
        </ul>
        </section>
    </content>
    
    <meta>
        <keywords>
            software development,
            eclipse	plugin,
            php programming,
            programming php,
            software development tools,
            php tutorial,
            free php scripts,
            architecture,
            php resources,
            mock objects,
            junit,
            php testing,
            unit test,
            automated php testing,
            test cases tutorial,
            explain unit test case,
            unit test example,
            unit test
        </keywords>
    </meta>
</page>
